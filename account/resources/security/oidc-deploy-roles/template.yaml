AWSTemplateFormatVersion: 2010-09-09
Description: Configure Roles to enable use of GitHub OIDC.

Parameters:
  ProjectName:
    Type: String
    Description: Name of the Project. Used as prefix for the Stack Set roles.
    MinLength: 1
  
  GitHubOrg:
    Type: String
    Description: Organization Name in Git-Hub
    MinLength: 1

  MonoRepo:
    Type: String
    Description: The name of the mono repository used for SAM and Web
    MinLength: 1


Resources:
    # GitHub Specific OIDC reference: 
    # https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
    # For Thumbprint refer:
    # https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_oidc_verify-thumbprint.html
    OIDCProvider:
      Type: AWS::IAM::OIDCProvider
      Properties:
        ClientIdList:
          - sts.amazonaws.com
        ThumbprintList:
          - 6938fd4d98bab03faadb97b34396831e3780aea1
        Url: https://token.actions.githubusercontent.com

    DeployWebAppRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${ProjectName}-${MonoRepo}-Role
        Path: /
        Policies:
          - PolicyName: !Sub ${ProjectName}-${MonoRepo}-Policy
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - s3:ListBucket
                    - s3:GetObject
                    - s3:PutObject
                    - s3:DeleteObject
                  Resource:
                    - !Sub arn:aws:s3:::${ProjectName}-*-webapp
                    - !Sub arn:aws:s3:::${ProjectName}-*-webapp/*
        AssumeRolePolicyDocument:
          Statement:
            - Effect: Allow
              Action: sts:AssumeRoleWithWebIdentity
              Principal:
                Federated: !Ref OIDCProvider
              Condition: 
                StringLike:
                  token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${MonoRepo}:*
                StringEquals:
                  token.actions.githubusercontent.com:aud: sts.amazonaws.com

    DeploySAMServiceRole:
      # Todo: Create Least Privileged Role
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${ProjectName}-${MonoRepo}-Role
        Path: /
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AdministratorAccess
        AssumeRolePolicyDocument:
          Statement:
            - Effect: Allow
              Action: sts:AssumeRoleWithWebIdentity
              Principal:
                Federated: !Ref OIDCProvider
              Condition: 
                StringLike:
                  token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${MonoRepo}:*
                StringEquals:
                  token.actions.githubusercontent.com:aud: sts.amazonaws.com
    
    SAMDeployerRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${ProjectName}-SAMDeploy-Role
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            -
              Effect: Allow
              Principal:
                Service:
                  - cloudformation.amazonaws.com
              Action:
                - sts:AssumeRole
        Path: /
        Policies:
          - PolicyName: !Sub ${ProjectName}-SAMDeploy-Policy
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                -
                  Effect: Allow
                  Action:
                    - lambda:*
                    - events:*
                    - states:*
                    - cloudwatch:*
                    - apigateway:*
                    - ec2:DescribeSecurityGroups
                    - ec2:DescribeSubnets
                    - ec2:DescribeVpcs
                    - iam:CreateRole
                    - iam:CreatePolicy
                    - iam:AttachRolePolicy
                    - iam:DetachRolePolicy
                    - iam:GetRole
                    - iam:DeleteRole
                    - iam:PutRolePolicy
                    - iam:PassRole
                    - iam:DeleteRolePolicy
                    - iam:TagRole
                    - iam:UntagRole
                    - iam:GetRolePolicy
                    - iam:DeletePolicy
                    - cloudformation:*
                    - dynamodb:*
                    - sns:*
                    - sqs:*
                    - s3:*
                  Resource: "*"
                - Action:
                    - "kms:DescribeKey"
                    - "kms:GenerateDataKey*"
                    - "kms:Encrypt"
                    - "kms:ReEncrypt*"
                    - "kms:Decrypt"
                  Resource: !Ref CodePipelineKmsKeyArn
                  Effect: Allow
                -
                  Effect: Allow
                  Action:
                    - "s3:GetObject*"
                    - "s3:PutObject"
                    - "s3:PutObjectAcl"
                  Resource:
                    - !Sub "arn:aws:s3:::${CodePipelineS3Bucket}/*"
        
Outputs:
  DeployWebAppRole:
    Description: Deploy Webapp Role Arn
    Value: !GetAtt DeployWebAppRole.Arn
    Export:
      Name: !Sub ${ProjectName}-${MonoRepo}-Role-Arn

  DeploySAMServiceRole:
    Description: Deploy SAM Service Role Arn
    Value: !GetAtt DeploySAMServiceRole.Arn
    Export:
      Name: !Sub ${ProjectName}-${MonoRepo}-Role-Arn
