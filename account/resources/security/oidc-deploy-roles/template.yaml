AWSTemplateFormatVersion: 2010-09-09
Description: Configure Roles to enable use of Bitbucket OIDC.

Parameters:
  ProjectName:
    Type: String
    Description: Name of the Project. Used as prefix for the Stack Set roles.
    MinLength: 1
  
  GitHubOrg:
    Type: String
    Description: Organization Name in Git-Hub
    MinLength: 1

  SAMRepository:
    Type: String
    Description: The name of the repository used for SAM
    MinLength: 1

  WebRepository:
    Type: String
    Description: The name of the repository used for web application
    MinLength: 1

Resources:
    # GitHub Specific OIDC reference: 
    # https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services
    # For Thumbprint refer:
    # https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_oidc_verify-thumbprint.html
    OIDCProvider:
      Type: AWS::IAM::OIDCProvider
      Properties:
        ClientIdList:
          - sts.amazonaws.com
        ThumbprintList:
          - 6938fd4d98bab03faadb97b34396831e3780aea1
        Url: https://token.actions.githubusercontent.com

    DeployWebAppRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${ProjectName}-${WebRepository}-Role
        Path: /
        Policies:
          - PolicyName: !Sub ${ProjectName}-${WebRepository}-Policy
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - s3:ListBucket
                    - s3:GetObject
                    - s3:PutObject
                    - s3:DeleteObject
                  Resource:
                    - !Sub arn:aws:s3:::${ProjectName}-*-webapp
                    - !Sub arn:aws:s3:::${ProjectName}-*-webapp/*
        AssumeRolePolicyDocument:
          Statement:
            - Effect: Allow
              Action: sts:AssumeRoleWithWebIdentity
              Principal:
                Federated: !Ref OIDCProvider
              Condition: 
                StringLike:
                  token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${WebRepository}:*

    DeploySAMServiceRole:
      # Todo: Create Least Priviledge Role
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub ${ProjectName}-${SAMRepository}-Role
        Path: /
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AdministratorAccess
        AssumeRolePolicyDocument:
          Statement:
            - Effect: Allow
              Action: sts:AssumeRoleWithWebIdentity
              Principal:
                Federated: !Ref OIDCProvider
              Condition: 
                StringLike:
                  token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${SAMRepository}:*
        
Outputs:
  DeployWebAppRole:
    Description: Deploy Webapp Role Arn
    Value: !GetAtt DeployWebAppRole.Arn
    Export:
      Name: !Sub ${ProjectName}-${WebRepository}-Role-Arn

  DeploySAMServiceRole:
    Description: Deploy SAM Service Role Arn
    Value: !GetAtt DeploySAMServiceRole.Arn
    Export:
      Name: !Sub ${ProjectName}-${SAMRepository}-Role-Arn
